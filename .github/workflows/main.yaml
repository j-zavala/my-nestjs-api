name: Deploy
on:
  push:
    branches: ["main"]

jobs:
  build-and-push-to-ecr:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log Checkout completion
        run: echo "Checkout step completed successfully."

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Log AWS credentials configuration completion
        run: echo "AWS credentials configured successfully."

      - name: Login to AWS ECR
        id: login-aws-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Log AWS ECR login completion
        run: echo "Logged in to AWS ECR successfully."

      - name: Build and push Docker image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Log Docker image build and push completion
        run: echo "Docker image built and pushed to AWS ECR successfully."

      - name: Log job completion
        run: echo "Build Docker Image job completed successfully."

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push-to-ecr
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Log AWS credentials configuration completion
        run: echo "AWS credentials configured successfully."

      - name: Login to Amazon ECR
        id: login-aws-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Log AWS ECR login completion
        run: echo "Logged in to AWS ECR successfully."

      - name: Deploy to EC2
        run: |
          instance_id="i-0222c067af589f83c"
          ecr_registry="${{ steps.login-aws-ecr.outputs.registry }}"
          ecr_repository="${{ secrets.AWS_ECR_REPO }}"
          image_tag="latest"
          image="$ecr_registry/$ecr_repository:$image_tag"

          command_id=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=$instance_id" \
            --comment "Pull Docker image and run it" \
            --parameters commands='[
              "aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin '$ecr_registry'",
              "echo \"Logged in to AWS ECR\"",
              "[[ $(docker ps -aq -f name=api) ]] && docker stop api || echo \"Container api not running\"",
              "[[ $(docker ps -aq -f name=api) ]] && docker rm -f api || echo \"Container api not found\"",
              "docker pull '$image'",
              "echo \"Pulled latest Docker image\"",
              "docker run -d -p 3000:3000 --name api '$image'",
              "echo \"Started new container\"",
              "docker logs api > /var/log/docker-api-logs.txt",
              "echo \"Captured logs from the new container\""
            ]' --query "Command.CommandId" --output text)

          echo "SSM Command ID: $command_id"

          aws ssm wait command-executed --command-id $command_id --instance-id $instance_id || true 

          status=$(aws ssm list-commands --command-id $command_id --query "Commands[0].StatusDetails" --output text)

          echo "$status"

          if [ "$status" == "Success" ]; then 
            echo "Command executed successfully"
          else
            echo "Command failed, time to get debugging"
            aws ssm list-command-invocations --command-id $command_id --details
            exit 1
          fi
      - name: Log EC2 deployment completion
        run: echo "Deployed to EC2 successfully."

      - name: Log job completion
        run: echo "Deploy to EC2 job completed successfully."
